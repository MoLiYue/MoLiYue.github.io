{"meta":{"title":"MoLiYue's Blogs","subtitle":"","description":"","author":"Mo Lin","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"github与hexo","slug":"github与hexo","date":"2023-07-03T16:24:35.000Z","updated":"2023-07-04T14:22:41.240Z","comments":true,"path":"2023/07/04/github与hexo/","link":"","permalink":"http://example.com/2023/07/04/github%E4%B8%8Ehexo/","excerpt":"","text":"诶嘿今天一时兴起，想把hexo与github自带的主页看看能不能融合一下，好充分利用一下我写的乱七八糟的东西。 就查阅了一下： Hexo结合github搭建个人博客 使用hexo+github搭建免费个人博客详细教程 主要用的就是第二篇。我简单题几条我自己做的改进。 使用github时单独为博客建立一个仓库，之后用git管理，这并不影响hexo直接部署到github的个人主页上这个问题。如果不希望自己的源码被别人看到，可以设置成private的仓库。 在加载其他主题的时候我更建议使用git submodule来实现，而不是使用git clone。这样更方便后续跟进更新。 我还没想好如何解决插入图片的问题。 其他查阅的资料Hexo git deployer删除了提交历史记录该怎么办？","categories":[],"tags":[]},{"title":"树莓派OS那些事","slug":"树莓派OS那些事","date":"2023-07-01T11:42:50.000Z","updated":"2023-07-03T16:41:21.434Z","comments":true,"path":"2023/07/01/树莓派OS那些事/","link":"","permalink":"http://example.com/2023/07/01/%E6%A0%91%E8%8E%93%E6%B4%BEOS%E9%82%A3%E4%BA%9B%E4%BA%8B/","excerpt":"","text":"安装系统使用树莓派官方下载器下载安装，下载时需要代理，如果没有代理最好自己先下载好iso文件再直接导入。 开始之前的准备安装好系统之后，需要现在电脑上调一些设置再插入树莓派开机。 如果想要直接讲树莓派作为服务器不介入屏幕的话，尤其注意需要有限做这几件事。 ssh首先打开ssh访问许可，在根目录下（在win下应该会挂载成boots这个盘）直接新建文件“ssh”，这样就打开了ssh。 密码登录开机镜像源VNC固定IP","categories":[],"tags":[]},{"title":"准备leecode的第二天","slug":"准备leecode的第二天","date":"2023-06-19T13:14:32.000Z","updated":"2023-07-03T16:01:52.296Z","comments":true,"path":"2023/06/19/准备leecode的第二天/","link":"","permalink":"http://example.com/2023/06/19/%E5%87%86%E5%A4%87leecode%E7%9A%84%E7%AC%AC%E4%BA%8C%E5%A4%A9/","excerpt":"","text":"数据结构复习 冒泡排序做个类比话，冒泡排序就是你小学时老师给你们班同学大小个。老师会先让你们随便站一排，然后他会从前面开始看，如果发现有两个挨着的人，高的在前面，矮的在后面了，就会让他俩换一下，一直换到排尾，这样排尾那个人就是最高的。再来一次，最后一个和倒数第二个就是排好的了。这样一共来n次，n是全班的人数，全班就肯定都排好了。 选择排序假设个场景，按学术水平给大家排队上台领奖。之前大家不知道这个要求，已经随便在下面坐好了。这种情况下，我们要求，第一个作为上的同学先说说自己的学术水平。比如第一个同学说我能做到50nm，之后后面的同学依次报自己的水平，之后我们需要所有同学中制成能做到最小的，他直接和第一个同学换一下位置。好，之后一共来n次，就排完了。 插入排序玩扑克，摸牌。摸完牌有不少人有习惯按顺序排手牌。你摸牌之后，你看他会做什么，把牌插到手牌里，对吧。但是我们主观有个判断能力，这🃏如果大就从后往前插入，这🃏如果小就从前往后插入。但是计算机没这个主观判断的能力，我们都希望要大牌，我们就希望我们拿来的🃏就是大的，所以就从后往前插。（仅供记忆用，实际的原理不是这样）","categories":[],"tags":[]},{"title":"准备leecode刷题第一天","slug":"准备leecode刷题第一天","date":"2023-06-18T14:54:28.000Z","updated":"2023-07-03T16:01:52.296Z","comments":true,"path":"2023/06/18/准备leecode刷题第一天/","link":"","permalink":"http://example.com/2023/06/18/%E5%87%86%E5%A4%87leecode%E5%88%B7%E9%A2%98%E7%AC%AC%E4%B8%80%E5%A4%A9/","excerpt":"","text":"今天做点简单的准备，并做好下周的规划。 ｜星期日｜星期一｜星期二｜星期三｜｜ 星期日：准备基础环境：编辑器：vscode、vim、lvim操作系统：MacOS、Ubuntu编译环境：gcc、g++、clang、（Java、Python、go）debug工具：gdb（Ubuntu）、lldb（MacOS）Terminal：kitty、tmux 编辑器编辑器我打算学习使用一下lvim，lvim是一套现成的带插件neovim，可能在某些方面他不如vscode，但是我也想学学入一下门。 准备花一个月的时间来学习、适应lvim。 学习流程安排数据结构复习： 排序： 冒泡排序 选择排序 插入排序 希尔排序 归并排序 快速排序 堆排序 计数排序 桶排序 基数排序 树： 图：","categories":[],"tags":[]},{"title":"国行PS5备份港服那些事","slug":"国行PS5备份港服那些事","date":"2023-06-06T04:46:58.000Z","updated":"2023-07-03T16:43:38.671Z","comments":true,"path":"2023/06/06/国行PS5备份港服那些事/","link":"","permalink":"http://example.com/2023/06/06/%E5%9B%BD%E8%A1%8CPS5%E5%A4%87%E4%BB%BD%E6%B8%AF%E6%9C%8D%E9%82%A3%E4%BA%9B%E4%BA%8B/","excerpt":"","text":"仅记录我自己想要备份港服时遇到的问题。 我买的国行PS5，为了省钱和省事没买港版和日版。机器到了之后我也没第一时间备份港服，先是在国服下了个原神，又拿光盘安装了两个游戏。 我一开始是没有着急注册港服账号的，因为想着买光盘玩。但是后来发现有一些游戏可以ps4升级ps5，在国服又无法升级，这样产生了这样的需求。 所以我先要备份的时候已经安装了几个游戏了，但是备份与恢复听起来好像就会把我已经安装的游戏删掉，为了避免把我费了很长时间下载的游戏删掉，我做了一些调查，找到比较有参考意义的论坛内容： 国行PS5增加账号问题 ps5ssd问题 根据这两篇内容被提问者采纳的回答，我总结如下： 如果找熟人备份可以同时备份国服和其他服账号，之后用于恢复PS5，这样不会删除已经安装在m.2 SSD中的游戏。 将PS5内置的m.2 SSD卸下来安装在别的PS5机器上是可以直接识别游戏的。 这样考虑到我的情况，以及保险起见，我为自己设计的计划如下： 首先，在某宝商家下单备份外服账号的服务，之后按照指导完成他们的需求。 同时可以考虑备份一下自己的现在的PS5，如果游戏不是跨平台的，想保留存档就只能开国服会员。 之后在等待PS5外服账号备份的时候，可以关机卸掉m.2 SSD。 收到备份后，按要求恢复备份。 恢复备份后，登陆自己的国行账号，关机。再将m.2 SSD安装进去，启动PS5，OK，下载的游戏都能识别到。 但是这个过程也挺麻烦的，如果有人尝试过在没有国行的备份中恢复备份，且不卸掉m.2 SSD会怎么样就更好了，至少我目前没看到有人分享这样的经验。 如果没安装大游戏的可以试试，欢迎大家分享。","categories":[],"tags":[]},{"title":"Redmi Note5A 刷LineageOS","slug":"Redmi-Note5A-刷LineageOS","date":"2023-02-02T14:59:37.000Z","updated":"2023-07-03T16:01:52.296Z","comments":true,"path":"2023/02/02/Redmi-Note5A-刷LineageOS/","link":"","permalink":"http://example.com/2023/02/02/Redmi-Note5A-%E5%88%B7LineageOS/","excerpt":"","text":"解除小米的Bootloader锁自行Google，官方就有解决方案，需要Windows。 下载adb自行Google下载，如果不识别设备，Google解决方案，网上也有讲，大概就是手动绑定对应设备。 手机得开开发者模式，小米系统还要插sim卡绑定乱七八糟的东西，需要小米账号，之后就可以adb控制了。 还有介绍说要下载usb驱动，但是我没下也没啥大问题；还有说要usb2.0，我也没usb2.0，也没啥大问题。 引导启动有3个不同的东西，一个是recovery系统、一个是fastboot、一个是我们要刷的系统。 首先应该是进入fastboot，之后在这个模式下刷recovery系统，但是我实际遇到了些问题，可能是没权限，反正直接刷重启是啥也没有，还是小米的recovery。不过可以fastboot里面直接用那个recovery reboot，就能进去了，不同手机的recovery不一样，必须对应才能好使。进去之后再install recovery就可以成功刷进去recovery系统了，以后再近recovery就都是新的了。 刷机包（rom）不需要提前下到手机里，只要进recovery用adb就能pull传包，也可以sideload直接刷。我的recovery就是adb传的，系统和opengapp就是sideload刷的。在系统也是必须对应手机才行，会有一个字母代码，小众的手机必须对上代码才行，我这个就是ugg，什么ugglite、r（balabala）啥的虽然也是红米Note5A但不一样，都不能用。之后就去网上搜有没有这个代码的系统，然后可能就能找到私包，就可以安装。由于私包咱们也没安过不知道会不会有问题，可以先单安装系统一下试试，能进去就没问题。之后再重刷一下系统，再安装谷歌框架就可以了，谷歌框架用对应的安卓版本就行，open gapp感觉更容易成功，反正失败了就进不去系统了。换个包重刷就行。 总结我刷过3台手机的LineageOS系统了，两个官方支持的，有教程。一个第三方的，歪门邪道的刷机包也好使。总体来说只要官方不锁bootloader就挺好刷的。没啥难度。","categories":[],"tags":[]},{"title":"zinit on Apple terminal","slug":"zinit on Apple terminal","date":"2023-01-02T05:45:46.000Z","updated":"2023-07-03T16:12:01.844Z","comments":true,"path":"2023/01/02/zinit on Apple terminal/","link":"","permalink":"http://example.com/2023/01/02/zinit%20on%20Apple%20terminal/","excerpt":"","text":"Problem我很久之前一直在linux上用的omz，后来听说zinit可以自己控制插件的安装，而且启动速度更快，所以就转到使用zinit。起初是一直没什么问题的，但是后来我开始使用Mac。当我从Linux的配置文件转移到Mac时，使用Apple terminal执行命令就出现了： 1update_terminalapp_cwd:5: command not found: omz_urlencode 这样的错误信息，而且伴随着每次命令的执行都会出现。 由于我之前一直在Linux使用kitty作为终端，我也在Mac上下载了它。在kitty中执行命令是就没有出现问题。这让我感觉到很奇怪，我查阅了一些资料，直到看到了这段源码： termsupport.zsh 而且我的zinit正好加载了这个内容。剩下的就是搜索一下源码，找到这个遗失的函数的定义位置，将其加载进来即可。 需要加载的文件为： 1zi snippet OMZL::functions.zsh","categories":[],"tags":[]},{"title":"好久没写，做个总结","slug":"好久没写，做个总结","date":"2022-11-30T09:06:36.000Z","updated":"2023-07-03T16:12:01.844Z","comments":true,"path":"2022/11/30/好久没写，做个总结/","link":"","permalink":"http://example.com/2022/11/30/%E5%A5%BD%E4%B9%85%E6%B2%A1%E5%86%99%EF%BC%8C%E5%81%9A%E4%B8%AA%E6%80%BB%E7%BB%93/","excerpt":"","text":"python抓包scapy 抓包工具123 dpkt 内容分析kubernetes挂载configmap相关问题使用configmap可以使用volume和volume mount进行挂载，具体的还涉及重写整个文件夹还是只添加一个文件（subpath）。但是挂载上去的文件始终没有写权限，即使setmode:0777（十六进制或十进制544吧？），在容器内看也都是有权限的，但是没用。最后就cp一份出来再写。 同时configmap如果使用重写整个文件夹的模式，可以有自动更新挂载的configmap功能，大约10s一次。 python多进程、多线程多进程我尝试了去写多进程（并发&#x2F;并行？）运行一个程序，但是进程间通信没完全成功，还有待进一步研究。 多线程现在的操作系统会自动的去分配多线程给多个CPU，所以似乎可以不用多进程。","categories":[],"tags":[]},{"title":"用git的那点事","slug":"用git的那点事","date":"2022-10-25T13:15:40.000Z","updated":"2023-07-03T16:12:01.848Z","comments":true,"path":"2022/10/25/用git的那点事/","link":"","permalink":"http://example.com/2022/10/25/%E7%94%A8git%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/","excerpt":"","text":"git clone12345678910git submodule init git submodule update git submodule deinit --all git rebase git checkout git reset git cherrypick git chechout","categories":[],"tags":[]},{"title":"中国移动光猫桥接","slug":"中国移动光猫桥接","date":"2022-10-15T02:19:39.000Z","updated":"2023-07-03T16:12:01.838Z","comments":true,"path":"2022/10/15/中国移动光猫桥接/","link":"","permalink":"http://example.com/2022/10/15/%E4%B8%AD%E5%9B%BD%E7%A7%BB%E5%8A%A8%E5%85%89%E7%8C%AB%E6%A1%A5%E6%8E%A5/","excerpt":"","text":"本来想着把家里的软路由配置上，结果没想到这次办的宽带是光猫路由，路由器桥接模式。 这个模式据说是多一次NAT（这块我不确定），导致网络性能下降，我实际测试感觉还可以没差太多，但是我用云原神的时候网络延迟着实不低。 所以我打算进行一下网络结构的改变。 正常情况下，大多是将光猫调整为桥接模式，之后再将路由器设置为拨号上网即可。但是我家这个光猫的软件无法直接更改模式，只能删除wan重新添加，这样问题就很多了。 具体实施情况，我问了一下中国移动的工程师，他们也不会，但是有成功案例，所以还是有希望的。","categories":[],"tags":[]},{"title":"221012","slug":"221012","date":"2022-10-12T11:11:01.000Z","updated":"2023-07-03T16:01:52.295Z","comments":true,"path":"2022/10/12/221012/","link":"","permalink":"http://example.com/2022/10/12/221012/","excerpt":"","text":"Node.js今天对node.js进行了简单的调整，调整如下： 123npm config set proxy http://127.0.0.1:7890npm config set https-proxy http://127.0.0.1:7890npm config set strict-ssl false 解除办法： 12npm config delete proxynpm config delete https-proxy 最后解决办法： 1npm config set puppeteer_skip_chromium_download true -g QuanX今天还尝试了一下Quanx做HTTP、SOCKS5代理服务器，可以也挺好用的。","categories":[],"tags":[]},{"title":"MacOS的代理那些事","slug":"MacOS的代理那些事","date":"2022-10-11T05:50:20.000Z","updated":"2023-07-03T16:12:01.847Z","comments":true,"path":"2022/10/11/MacOS的代理那些事/","link":"","permalink":"http://example.com/2022/10/11/MacOS%E7%9A%84%E4%BB%A3%E7%90%86%E9%82%A3%E4%BA%9B%E4%BA%8B/","excerpt":"","text":"我是从Windows转Linux再转MacOS的。 Windows近几年Windwos下的代理挺方便的，已经基本抛弃了之前的SSR之类的软件了，主用一个clash for windows就能无脑的解决大部分问题，它还提供TUN模式着实是挺好用的。 Archlinux后来看着Archlinux的自由多彩就转手去了Linux，中间也简单用过一段时间其他的发行版（毕竟当时想找跟得上时代安装教程还是挺费事的，后来才意识到官网的重要性），比如Ubuntu、Manjaro。从这开始我开始逐步接触Linux下的代理，其实同时期由于手上有了一个树莓派，所以也开始接触软路由等内容，但是不深。 Linux下的代理相比于windows就要复杂不少。也有clash，但是我不推荐使用，clash使用的是系统代理的方式，并不能代理所有的情况，比如terminal的代理就不走系统代理。配置terminal的代理也会在某些命令上不好用。 所以Linux下推荐全局代理、或者叫透明代理，软件主要是v2ray（clash也可以，只要你会自己配），之前有一个v2ray的套壳由于核心作者与部分成员闹掰了不再更新了（我甚至忘记了它的名字），我是不推荐使用。我比较推荐v2raya这个软件，方便快捷，也有缺点，支持的加密方式相对少，我之前就是因为机场加密变了导致无法继续使用。 MacOS现在我使用MacOS，说实在就是馋它的生态，我有iPad、iPhone还办了iCloud，用起来还是非常舒服的。 但是MacOS也有很多不尽如人意的地方，由于我是从Linux转过来的，虽然都是Unix-like系统还是有很多不同的，有很多指令就不再适用，需要时间去适应，而且也不实用，毕竟服务器大多是Linux，Mac就很独树一帜。 MacOS上的代理有很多，之前在Linux上比较难设置的clash也有ClashX以及clash for windows可以使用，配置方式也更加图形化。但是问题也与Linux上的情况一致，无法自动配置全局代理。这时候我又想起来v2raya了，但是很遗憾v2raya在这里也不支持。这样我就没有什么好办法进行全局代理了。 接下来，我还是想了一些办法的，有一些我还没有去尝试过。 使用proxychain去链clash server，不知道效果会如何。 最简单的办法就是弄一个软路由插在路由器上，这样非常方便，而且基本上一劳永逸，还可以有很多有趣的功能。 我详细讲讲吧，软路由有两种方式，一个是直接设置成网关，把路由器的网关IP直接指到软路由上，软路由的网关再指回路由器，同时建议关闭路由器的DHCP server，在软路由上开启，这样能进一步降低路由器的工作负担。这种情况所有连接到此wifi下的设备就都可以直接走代理了。 还有一种办法，就是在每台需要走代理的设备上手动配置网关，这样能节省一部分步骤，直接将软路由连接路由器即可，缺点就是每个设备都得手动配置，挺麻烦的。优点就是路由器上不用改太多，登不上路由器应该也可以使用。 但是最近我没有弄成，有两个原因。首先，在自己家里，我办了中国移动的宽带，然而这个玩意的光猫是路由模式，而且工程师都不会改桥接模式，emmm，这导致第一种办法改网关什么的，无了。而且我还不喜欢第二种，嫌麻烦。其次，我现在在外工作，居住的地方的wifi后台轻易无法登陆，这也就直接导致第一种方案作废，但是好处是我在外的设备有限，第二种方案也是不错的选择（但是软路由放家里了）。 现在手上没有什么能做软路由的设备了，只能研究下一步了。虚拟机、容器。我手上有电脑，如果使用虚拟机来做软路由也是不错的选择呗，但是问题又来了，M1的Mac在虚拟机下是否能运行Openwrt呢？这个我还没有尝试，甚至虚拟机软件我还没想好用什么。之后想到最近自己工作中使用的容器，我想使用Docker是不是能更方便更快捷的实现这个功能呢？我去找了Openwrt的image，也成功找到了，但是运行上有一些问题，Docker的网络大体上有那么4种可以选，符合我预期的需要使用macvlan，虽然macvlan性能相对一般，但至少能用。可惜的是M1的Mac似乎不支持macvlan，或者我没有开这个功能，我还没有想好该如何去继续完成。 今天想到的就这些了。","categories":[],"tags":[]},{"title":"VPP and Pktgen","slug":"VPP and Pktgen","date":"2022-09-26T12:01:47.000Z","updated":"2023-07-03T16:12:01.835Z","comments":true,"path":"2022/09/26/VPP and Pktgen/","link":"","permalink":"http://example.com/2022/09/26/VPP%20and%20Pktgen/","excerpt":"","text":"VPPvpp是一个大三层的交换机，内部操作与交换机类似。 123456show intshow hardwareshow runshow threadclear interfacesshow ? Pktgen-DBDKPktgen是一个打流软件，应该是linux原生的（记不清了），它支持lua语言，也有自己的一套语言（感觉就是特化的C）。最近看了一下将Pktgen打包成image，也把lua的功能加上了，最开始出现了一些问题，后来发现是没有指定版本而导致的不兼容，指定版本后就好了。 找机会把那段代码拷下来，嘿嘿。 主要用到的知识是Docker的Dockerfile吧 12docker","categories":[],"tags":[]},{"title":"220920","slug":"220920","date":"2022-09-21T01:43:06.000Z","updated":"2023-07-03T16:01:52.295Z","comments":true,"path":"2022/09/21/220920/","link":"","permalink":"http://example.com/2022/09/21/220920/","excerpt":"","text":"UTCUTC全称Coordinated Universal Time，中文译名协调世界时。 在linux系统中有时候需要看其UTC时间 &#96;&#96;","categories":[],"tags":[]},{"title":"Shell编程的一点基础内容","slug":"Shell编程的一点基础内容","date":"2022-09-19T05:46:08.000Z","updated":"2023-07-03T16:12:01.842Z","comments":true,"path":"2022/09/19/Shell编程的一点基础内容/","link":"","permalink":"http://example.com/2022/09/19/Shell%E7%BC%96%E7%A8%8B%E7%9A%84%E4%B8%80%E7%82%B9%E5%9F%BA%E7%A1%80%E5%86%85%E5%AE%B9/","excerpt":"","text":"今日总结今天学习了一点shell编程，根据mentor提供的一个shell脚本进行更改实现自动定时抓Pod包的功能。 学习到的内容如下： shell创建文件自带时间 1touch $(date +%y%m%d).cap shell对后台运行的进程进行kill 1kill -9 PID shell将grep的内容选取其中一列 1awk -F &#x27; &#x27; &#x27;&#123;print $5&#125;&#x27; 使用awk取某一行数据中的倒数第N列：$(NF-(n-1)) 比如取&#x2F;etc&#x2F;passwd文件中的第2列、倒数第1、倒数第2、倒数第4列（以冒号为分隔符）。（$NF表示倒数第一列，$(NF-1)表示倒数第二列） 参考文献：awk的一些用法 如果不存在，则创建一个文件夹 12345if [ ! -d capFiles ]; then mkdir capFileselse echo &#x27;dir exist&#x27;fi if语句 12345678910111213if ((1 &gt; 0)); then ...else ...fiif ((1 &gt; 0)); then ...elif; then ...else ...fi 循环结构 1234while conditiondo ......done","categories":[],"tags":[]},{"title":"使用ssh在后台运行程序","slug":"使用ssh在后台运行程序","date":"2022-09-19T05:37:27.000Z","updated":"2023-07-03T16:12:01.841Z","comments":true,"path":"2022/09/19/使用ssh在后台运行程序/","link":"","permalink":"http://example.com/2022/09/19/%E4%BD%BF%E7%94%A8ssh%E5%9C%A8%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F/","excerpt":"","text":"使用ssh在后台运行程序方法之一：使用nohupnohup可以使后面的命令不会响应挂断（SIGHUP）信号。也就是说，通过远程登录执行nohup命令后，即使退出登录后，程序还是会正常执行。通常情况下，nohup命令最后会跟上&amp;字符，表示将这个命令放至后台执行，这样才能真正做到将这个命令放至后台持续的执行。具体示例如下所示。 提示：nohup通常用于执行无干预的自动化程序或脚本，无法完成带有交互的操作。 执行如下命令，每秒输出一行信息。bash hello.sh系统显示类似如下。 在命令头尾分别加上nohup和&amp;，如下所示，可以看到nohup输出了一行信息，再按一下回车键就跳回了Shell命令行，此时命令已经在后台执行了，nohup将命令的输出重定向至当前目录的nohup.out文件中。同时注意到nohup会将对应程序的PID输出，PID可用于需要中断进程时结束进程。 nohup bash hello.sh &amp; 系统显示类似如下。 通过如下命令，可以持续的查看nohup.out的输出，达到监视程序的效果。 tail -f nohup.out 在命令中也可以使用重定向将程序的输出改为自己想要的文件名，如下所示，则程序的输出就会写到hello.log文件中。 nohup bash hello.sh &gt;hello.log &amp; 若程序不会自动退出，那么此时需要使用kill命令来结束进程。例如，可以使用如下命令，结束进程。 kill -TRM [$PID] 说明：[$PID]为之前nohup命令输出的值。 参考文献： Linux系统SSH客户端断开后保持进程继续运行配置方法","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-09-15T10:16:40.027Z","updated":"2022-09-15T10:16:40.027Z","comments":true,"path":"2022/09/15/hello-world/","link":"","permalink":"http://example.com/2022/09/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}